인터페이스 
폴리몰리즘 70%
인터페이스 20%
나머지 10% (함수 기타등등)

interface Printable{
	public void print(String doc); // 추상 메소드 
}

class Printer implements Printable{
	public void print(String doc);{
		System.out.println(doc);
	}
}
**외우기
인터페이스의 사전적의미 연결점,접점 으로 둘사이를 연결하는 매개체를 뜻함
자바의 인터페이스 의미도 같은 역활을 함

예
ms 에서 각기 다른 업체(삼성 , LG )의 프린트를 사용하려함
삼성과 lg프린트를 사용하기 위해선 드라이버라는것을 설치 해야한다
================================
조작하는 메소드를 구현할수있기때문에 해당 os별로 사용할수있는 각각의 클래스 (Driver)를 정의해야한다

디바이스 드라이버 (c언어만 가능 java는 안됨 ㄴㄴ 

인터페이스안에 존재할수있는 메소드는  추상메소드 디폴트 메소드 static메소드가있음
인터페이스 간의 상속도 가능함 
인터페이스 type으로  instanceof 연산을 할수있음
이런 특성들이 클래스랑 유사함

인터페이스내에 위치하는 메소드는  딱히 선언안해도 자동으로 public이 됨
그래서 귀찮게 붙힐 필요 ㄴㄴ 

인터페이스 특징 
선언과 동시에 값으로 초기화 해야함
모든 변수는 public static final이 선언된걸로 간주함 


인터페이스를 구상하는 클래스는 해당 인터페이스의 모든 추상메소드를 구현해야함 그래야지 인스턴스 생성이 가능함


인터페이스 상속 

예
ms 에서 각기 다른 업체(삼성 , LG )의 프린트를 사용하려함
삼성과 lg프린트를 사용하기 위해선 드라이버라는것을 설치 해야한다
그런데! 
삼성lg에서 컬러를 발표했음 
그래서 인터페이스 상속이라는것을 사용하면 
기존 클래스들은 수정할 필요성이 없음  개꿀

상속 표기 
클래스 extends 클래스
인터페이스 extends 인터페이스 
클래스 implements 인터페이스

ㅇㅋ?

인터페이스 디폴트메소드

1.8 자바에서만 가능 
하지만 실무에선 그 이하것들이 많음
잘 안씀
하지만 알고있으면 좋음

여러개의 클래스들을 일일이 바꾸는게 오바임 
그래서 디폴트 를 사용하게 되면 그렇게 하지않을 편리함이 생김
하지만 1.8만 가능 ㅡㅡ

 쌤도 인터페이스에서 잘 못봄 static 디폴트 두개다 

instanceof 연산자는 폴리몰티즘(다형성) 적용됬는냐 라는 뜫
***(변수명 instanceof 클래스타입)이 옴
다형성이 적용이 됬냐 물어보는것

앞에있는게 뒤에가지고있는지 따지는거
IF( A instanceof  B) 요론고


A a = new B();
A a1 = new c();

if( a instanceof  B){
a가 B까지 포함이 되어있기떄문에 참 

if( a instanceof  c){
a는 B까지 포함이 되었는데 c까지 포함됬냐고 물어보니까 이건 구라 ㅇㅇ

---------------------------------------------------------- 이거 중요함 
클래스 앞에 abstract 붙는게 //추상클래스임
왜 붙냐면 

구현안된(바디가 없는) 함수가 한개라도있으면 클래스 앞에 abstract 붙혀줘야함 안붙히면 에러밭임

abstract 뜻 미완성 
abstract가 있는 클래스는 미완성 클래스라서 객체생성이 안됨 
가능하게 하려면 오버라이딩(@Override) 시켜서 extends(상속) 해서 자식을 구현해줘야함

개어렵네 
언제 추상클래스를 
 언제 인터페이스슴?

설계할때 abstract 이거 잘안씀 추상클래스는 잘안씀 rgrg

인터페이스를 더 많이 씀 


인터페이스 vs 추상클래스 
인터페이스 장점
-표준,강제 
-개발속도(개발속도가 얼마나 빠르냐면 interface)...라는 말장난 함, 
근데맞음 interface가 더빠름 훨빠름 


intetface가 개발속도가 훨씬 빠름 
왜지? 왜때문이지
hoxy 
인터페이스는 구현하는부와 호출하는부가ㅣ 명확히 나눠져있기떄문에 
외주에서 가져다 쓰는 선언만 하면됨  개꿀 rgrg


추상클래스는 
일반적인 클래스에서는 데이터멤버와 함수가 있는데 기본적인역활은 인스턴스 변수(계속 변하게 할수있음))
인스턴스는 상수와 추상메소드로 이루어졌음

일반적인 클래스를 클래스 내에서  abstract 로 클래스로 사용하는게 맞음;
자손한테 뭔가 구현하게 만들떄 사용함


일반 클래스는 안에 있는 내용들(변수들)을 전부 확인을해서 오버라이딩을 해야하는데 
지금이야 몇개안되지만 나중에는 겁나많음 그거 감당몬함 
개빡실꺼임 (쌤 피셜_)

인터페이스의 목적은 목적은 반강제 시켜서 자손들한테 구현하게끔 하는것.
따로 구현해야할떄의 목적,,
일반클래스 목적에 더 가까울떼 추상클래스 사용







