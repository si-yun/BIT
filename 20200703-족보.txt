1. 아래의 개념을 설명하시오.
-DI번째 방법은 new해서 생성하는 방법 
2번째 방법은 setter getter함수+ 생성자 함수를 이용해서 조립하는거 를 말하는거야
-IoC(제어권이 역전됨 (의존관계 주입 )
어떤 객체가 사용할 객체의 (의존관계인 객체) 를 직접선언하여 사용하는것이 아니라 
어떤 방법을 사용 하여 (ex.생성자)를 사용하여 주입받아 사용하는것 

-IoC 컨테이너
제어의 역전 – 외부(컨테이너)에서 제어를 함.
객체(부품)들을 관리하는 컨테이너(집합체) 


2. 스프링의 장점 및 단점에 대하여 이야기 하여 보세요.

스프링장점
정형화 : 일정수준이상의 품질을 기대
유지보수가 쉽다.
개발자에게 기본적인 패턴(DI, AOP, 서비스 추상화)등을 강제 시킴
유연성 및 
각모듈을 조립(설정을 통한)하면 기능을 쉽게 구현
모듈 추가 제거및 관리가 수월하다.

스프링 단점
습득시간이 오래걸림.
스프링 설정하는 것에만 익숙해지다보니 코딩 실력이 떨어지게됨.
무겁다.

3.  원, 삼각형, 사각형의 객체를 만든후, 반지름 10, 가로 세로 10 인 각각의 넓이를 구하는 프로그램을 작성하시오.
조건) Ioc 컨테이너를 통하여 객체를 생성할것.

4) 아래의 결과를 예측하고, 아래의 부분을 설명하시오.		
var varArrSort = new Array("E", "B", "A", "C", "D");
console.log("varArrSortBefore : " + varArrSort);
console.log("varArrSort : " + varArrSort.sort());
console.log("varArrSortAfter : " + varArrSort);
varArrSort = varArrSort.sort();  // 설명하시오.
console.log("varArrSortAfter : " + varArrSort); //결과가 왜 그렇게 나오는지 설명하시오
